//file:noinspection GroovyAssignabilityCheck
buildscript {
    repositories {
        maven { url 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url 'https://repo.spongepowered.org/repository/maven-public/' }
        maven { url 'https://plugins.gradle.org/m2/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.4.0"
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
apply plugin: "com.matthewprenger.cursegradle"
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'maven-publish'

group = project.maven_group
archivesBaseName = project.mod_name
version = 'mc' + project.mc_version + '-' + project.mod_version
def SemVer_version = project.mod_version
def ENV = System.getenv()

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

mixin {
    add sourceSets.main, "mixins.refmap.json"
}

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'parchment', version: project.parchment_version
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                carpet {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                carpet {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'carpet', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                carpet {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }
dependencies {
    minecraft "net.minecraftforge:forge:${project.forge_version}"
    annotationProcessor 'org.spongepowered:mixin:0.8.4:processor'
}

jar {
    manifest {
        attributes([
            "Specification-Title": "carpet",
            "Specification-Vendor": "Cjsah",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": SemVer_version,
            "Implementation-Vendor" :"Cjsah",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "carpet.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

curseforge {
    if (ENV.CURSEFORGE_TOKEN) {
        apiKey = ENV.CURSEFORGE_TOKEN
    } else {
        println "No CURSEFORGE_TOKEN"
    }
    project {
        id = project.curse_id
        releaseType = project.curse_type
        changelog = project.curse_changelog
        project.curse_versions.split(", ").each {
            String gameVersion -> addGameVersion gameVersion
        }
        mainArtifact(jar) {
            displayName = "$project.name v$SemVer_version for $project.mc_version"
        }
    }
}
